// <auto-generated />
using System;
using Equals.Repositorio.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Equals.Repositorio.Migrations
{
    [DbContext(typeof(EqualsContexto))]
    [Migration("20200820035312_PrimeiraVersao")]
    partial class PrimeiraVersao
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Equals.Dominio.Entidades.Adquirente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("NomeAdquirente")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Adquirentes");
                });

            modelBuilder.Entity("Equals.Dominio.Entidades.Arquivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AdquirenteId");

                    b.Property<DateTime>("DataRecepcao");

                    b.Property<string>("NomeArquivo")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<bool>("Recepcionado");

                    b.Property<int>("TipoArquivoId");

                    b.HasKey("Id");

                    b.HasIndex("AdquirenteId");

                    b.HasIndex("TipoArquivoId");

                    b.ToTable("Arquivos");
                });

            modelBuilder.Entity("Equals.Dominio.Entidades.FagammonCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Adquirente")
                        .IsRequired();

                    b.Property<int>("ArquivoId");

                    b.Property<DateTime>("DataProcessamento");

                    b.Property<string>("Estabelecimento")
                        .IsRequired();

                    b.Property<string>("Sequencia")
                        .IsRequired();

                    b.Property<string>("TipoRegistro")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ArquivoId");

                    b.ToTable("FagammonCards");
                });

            modelBuilder.Entity("Equals.Dominio.Entidades.LogErro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ArquivoId");

                    b.Property<DateTime>("DataProcessamento");

                    b.Property<string>("Mensagem");

                    b.HasKey("Id");

                    b.HasIndex("ArquivoId");

                    b.ToTable("LogErros");
                });

            modelBuilder.Entity("Equals.Dominio.Entidades.TipoArquivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("NomeTipoArquivo")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("TipoArquivos");
                });

            modelBuilder.Entity("Equals.Dominio.Entidades.UflaCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Adquirente")
                        .IsRequired();

                    b.Property<int>("ArquivoId");

                    b.Property<DateTime>("DataProcessamento");

                    b.Property<string>("Estabelecimento")
                        .IsRequired();

                    b.Property<DateTime>("PeriodoFinal");

                    b.Property<DateTime>("PeriodoInicial");

                    b.Property<string>("Sequencia")
                        .IsRequired();

                    b.Property<string>("TipoRegistro")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ArquivoId");

                    b.ToTable("UflaCards");
                });

            modelBuilder.Entity("Equals.Dominio.Entidades.Arquivo", b =>
                {
                    b.HasOne("Equals.Dominio.Entidades.Adquirente", "Adquirente")
                        .WithMany("Arquivos")
                        .HasForeignKey("AdquirenteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Equals.Dominio.Entidades.TipoArquivo", "TipoArquivo")
                        .WithMany("Arquivos")
                        .HasForeignKey("TipoArquivoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Equals.Dominio.Entidades.FagammonCard", b =>
                {
                    b.HasOne("Equals.Dominio.Entidades.Arquivo", "Arquivo")
                        .WithMany("FagammonCards")
                        .HasForeignKey("ArquivoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Equals.Dominio.Entidades.LogErro", b =>
                {
                    b.HasOne("Equals.Dominio.Entidades.Arquivo", "Arquivo")
                        .WithMany("LogErros")
                        .HasForeignKey("ArquivoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Equals.Dominio.Entidades.UflaCard", b =>
                {
                    b.HasOne("Equals.Dominio.Entidades.Arquivo", "Arquivo")
                        .WithMany("UflaCards")
                        .HasForeignKey("ArquivoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
